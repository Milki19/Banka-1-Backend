create table if not exists customer
(
    id                bigint generated by default as identity
        primary key,
    address           varchar(255) not null,
    birth_date        varchar(255) not null,
    email             varchar(255) not null
        unique,
    first_name        varchar(255) not null,
    gender            varchar(255) not null
        constraint customer_gender_check
            check ((gender)::text = ANY ((ARRAY ['MALE'::character varying, 'FEMALE'::character varying])::text[])),
    last_name         varchar(255) not null,
    password          varchar(255),
    phone_number      varchar(255) not null,
    salt_password     varchar(255),
    username          varchar(255) not null
        unique,
    verification_code varchar(255)
);


create table  if not exists customer_bank_accounts
(
    customer_id  bigint not null
        constraint fkpx3uqijuo0c0dymtpmprlrfnq
            references customer,
    bank_account varchar(255)
);


CREATE TABLE IF NOT EXISTS customer_permissions (
    customer_id BIGINT NOT NULL REFERENCES customer(id),
    permission VARCHAR(255)
    );

ALTER TABLE customer_permissions
DROP CONSTRAINT IF EXISTS customer_permissions_permission_check;

ALTER TABLE customer_permissions
    ADD CONSTRAINT customer_permissions_permission_check
        CHECK ((permission)::text = ANY (
    ARRAY[
    'CREATE_EMPLOYEE',
    'EDIT_EMPLOYEE',
    'DELETE_EMPLOYEE',
    'LIST_EMPLOYEE',
    'READ_EMPLOYEE',
    'SET_EMPLOYEE_PERMISSION',
    'CREATE_CUSTOMER',
    'EDIT_CUSTOMER',
    'DELETE_CUSTOMER',
    'LIST_CUSTOMER',
    'READ_CUSTOMER',
    'SET_CUSTOMER_PERMISSION',
    'OTC_TRADING'
    ]
    ));


create table  if not exists employee
(
    active            boolean      not null,
    is_admin          boolean      not null,
    id                bigint generated by default as identity
        primary key,
    address           varchar(255) not null,
    birth_date        varchar(255) not null,
    department        varchar(255) not null
        constraint employee_department_check
            check ((department)::text = ANY
                   ((ARRAY ['ACCOUNTING'::character varying, 'FINANCIAL'::character varying, 'CREDIT'::character varying, 'LEGAL'::character varying, 'IT'::character varying, 'HR'::character varying, 'SUPERVISOR'::character varying, 'AGENT'::character varying])::text[])),
    email             varchar(255) not null
        unique,
    first_name        varchar(255) not null,
    gender            varchar(255) not null
        constraint employee_gender_check
            check ((gender)::text = ANY ((ARRAY ['MALE'::character varying, 'FEMALE'::character varying])::text[])),
    last_name         varchar(255) not null,
    password          varchar(255),
    phone_number      varchar(255) not null,
    position          varchar(255) not null
        constraint employee_position_check
            check (("position")::text = ANY
                   ((ARRAY ['NONE'::character varying, 'DIRECTOR'::character varying, 'MANAGER'::character varying, 'WORKER'::character varying, 'HR'::character varying])::text[])),
    salt_password     varchar(255),
    username          varchar(255) not null
        unique,
    verification_code varchar(255)
);


create table  if not exists employee_permissions
(
    employee_id bigint not null
        constraint fk10w3vpnfbme0cnngiuaauy0qh
            references employee,
    permission  varchar(255)
        constraint employee_permissions_permission_check
            check ((permission)::text = ANY
                   ((ARRAY ['CREATE_EMPLOYEE'::character varying, 'EDIT_EMPLOYEE'::character varying, 'DELETE_EMPLOYEE'::character varying, 'LIST_EMPLOYEE'::character varying, 'READ_EMPLOYEE'::character varying, 'SET_EMPLOYEE_PERMISSION'::character varying, 'CREATE_CUSTOMER'::character varying, 'EDIT_CUSTOMER'::character varying, 'DELETE_CUSTOMER'::character varying, 'LIST_CUSTOMER'::character varying, 'READ_CUSTOMER'::character varying, 'SET_CUSTOMER_PERMISSION'::character varying])::text[]))
);


create table if not exists  reset_password
(
    type            integer      not null,
    used            boolean      not null,
    created_date    bigint       not null,
    expiration_date bigint       not null,
    id              bigint generated by default as identity
        primary key,
    user_id         bigint,
    token           varchar(255) not null
);


create table  if not exists set_password
(
    customer        boolean,
    used            boolean,
    created_date    timestamp(6) with time zone,
    expiration_date timestamp(6) with time zone,
    id              bigint generated by default as identity
        primary key,
    user_id         bigint,
    token           varchar(255)
);


